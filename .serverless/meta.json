{
  "C:\\Users\\Dell\\Desktop\\POLIGON\\poligon-marketplace": {
    "versionSfCore": null,
    "versionFramework": "4.1.6",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {},
    "composeServiceName": null,
    "servicePath": "C:\\Users\\Dell\\Desktop\\POLIGON\\poligon-marketplace",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "marketplace-api",
      "plugins": [
        "serverless-plugin-optimize",
        "serverless-offline",
        "serverless-dotenv-plugin",
        "serverless-jetpack"
      ],
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-1",
        "stage": "dev",
        "apiGateway": {
          "minimumCompressionSize": 1024
        },
        "deploymentBucket": "serverlessdeploymentbucket2",
        "versionFunctions": true,
        "environment": {
          "PG_HOST": "bd-agrotraze.crgiqigggkmg.us-east-2.rds.amazonaws.com",
          "PG_PORT": "5432",
          "PG_USER": "postgres",
          "PG_PASS": "YDrJjdMJ6FASy4tYNgn6",
          "PG_DATABASE": "poligondb",
          "DATABASE_URL": "postgres://<postgres>:<YDrJjdMJ6FASy4tYNgn6>@<bd-agrotraze.crgiqigggkmg.us-east-2.rds.amazonaws.com>:<5432>/<poligondb>",
          "TOKEN_SECRET_KEY": "<REDACTED>"
        },
        "deploymentBucketObject": {
          "name": "serverlessdeploymentbucket2"
        },
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "MainLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/marketplace-api-dev-main"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "marketplace-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/marketplace-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/marketplace-api-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "marketplace-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "MainLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverlessdeploymentbucket2",
                  "S3Key": "serverless/marketplace-api/dev/1719295297570-2024-06-25T06:01:37.570Z/marketplace-api.zip"
                },
                "Handler": "dist/src/lambda.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "marketplace-api-dev-main",
                "MemorySize": 256,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "PG_HOST": "bd-agrotraze.crgiqigggkmg.us-east-2.rds.amazonaws.com",
                    "PG_PORT": "5432",
                    "PG_USER": "postgres",
                    "PG_PASS": "YDrJjdMJ6FASy4tYNgn6",
                    "PG_DATABASE": "poligondb",
                    "DATABASE_URL": "postgres://<postgres>:<YDrJjdMJ6FASy4tYNgn6>@<bd-agrotraze.crgiqigggkmg.us-east-2.rds.amazonaws.com>:<5432>/<poligondb>",
                    "TOKEN_SECRET_KEY": "<REDACTED>"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "MainLogGroup"
              ]
            },
            "MainLambdaVersionMrBXSMoYZsAcspzVqw8By6ZOspnisEaXbe2ii31CXM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "MainLambdaFunction"
                },
                "CodeSha256": "LF7egFkzgQIoshPgK+3rzPdrHoeIKHljSLPWR/pd6wc="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-marketplace-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": "",
                "MinimumCompressionSize": 1024
              }
            },
            "ApiGatewayResourceAnyVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "{any+}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodAnyVarAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceAnyVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "MainLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "MainLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1719295215207": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodAnyVarAny"
              ]
            },
            "MainLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "MainLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverlessdeploymentbucket2",
              "Export": {
                "Name": "sls-marketplace-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "MainLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "MainLambdaVersionMrBXSMoYZsAcspzVqw8By6ZOspnisEaXbe2ii31CXM"
              },
              "Export": {
                "Name": "sls-marketplace-api-dev-MainLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-marketplace-api-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "main": {
          "handler": "dist/src/lambda.handler",
          "memorySize": 256,
          "timeout": 30,
          "events": [
            {
              "http": {
                "method": "any",
                "path": "{any+}",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "marketplace-api-dev-main",
          "package": {},
          "memory": 256,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "MainLambdaVersionMrBXSMoYZsAcspzVqw8By6ZOspnisEaXbe2ii31CXM"
        }
      }
    },
    "serviceRawFile": "service: marketplace-api\r\n\r\nplugins:\r\n - serverless-plugin-optimize\r\n - serverless-offline\r\n - serverless-dotenv-plugin\r\n - serverless-jetpack\r\n\r\nprovider:\r\n name: aws\r\n runtime: nodejs18.x\r\n region: us-east-1 # Región de AWS (cambia a la que necesites)\r\n stage: dev # Entorno de despliegue (dev, prod, etc.)\r\n apiGateway:\r\n    minimumCompressionSize: 1024 # Tamaño mínimo para compresión\r\n deploymentBucket:\r\n    name: serverlessdeploymentbucket2\r\n\r\nfunctions:\r\n main: # The name of the lambda function\r\n   # The module 'handler' is exported in the file 'src/lambda'\r\n   handler: dist/src/lambda.handler\r\n   memorySize: 256 # Memoria asignada (ajusta según tus necesidades)\r\n   timeout: 30 # Tiempo de espera máximo\r\n   events:\r\n     - http:\r\n         method: any\r\n         path: /{any+}\r\n\r\n    ",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "b41505733bdbd9a68becc64e3b7607f1",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "df399ded-2ae2-4b71-a9fe-0db73e3c2b4f",
    "orgName": "luis732",
    "userId": "tF9lLKvRBTCsYH6NVr",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "luis732",
    "subscription": null,
    "userEmail": "lfgutierrez2017@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "767398044749",
    "versionSf": "4.1.6",
    "serviceProviderAwsCfStackName": "marketplace-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:767398044749:stack/marketplace-api-dev/6c318290-32b8-11ef-b6b5-0afff6f85dc5",
    "serviceProviderAwsCfStackCreated": "2024-06-25T06:01:54.415Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-25T06:02:01.004Z",
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "MainLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:767398044749:function:marketplace-api-dev-main:28",
        "Description": "Current Lambda function version",
        "ExportName": "sls-marketplace-api-dev-MainLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://robjjfo259.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-marketplace-api-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverlessdeploymentbucket2",
        "ExportName": "sls-marketplace-api-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}